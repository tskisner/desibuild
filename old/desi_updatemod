#!/bin/bash

show_help () {
    echo "" >&2
    echo "Usage:  $0" >&2
    echo "    -p <prefix>" >&2
    echo "" >&2
    echo "    Process the module version files installed by desi_setup." >&2
    echo "    This makes the .version_new files the default and makes a" >&2
    echo "    backup copy of the old .version files." >&2
    echo "" >&2
    echo "" >&2
}


prefix=""

while getopts ":p:" opt; do
    case $opt in
        p)
            prefix=$OPTARG
            ;;
        \?)
            show_help
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            show_help
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

if [ "x${prefix}" = "x" ]; then
    show_help
    exit 1
fi

if [ ! -d "${prefix}" ]; then
    echo "Install prefix \"${prefix}\" does not exist." >&2
    exit 1
fi

# the modulefile directory
moddir="${prefix}/modulefiles"

for name in $(ls ${moddir}); do
    pkgdir="${moddir}/${name}"
    if [ -d "${pkgdir}" ]; then
        # this is a directory, so it must be for a package
        echo "Checking module for ${name}"

        # the real version file
        ver="${pkgdir}/.version"

        # the new version file created by desi_setup
        vernew="${pkgdir}/.version_new"

        # where to back up the old version to
        verold="${pkgdir}/.version_old"

        if [ -e "${vernew}" ]; then
            # we have a new version file, process it
            echo "  Found new version file for ${name}"
            if [ -e "${ver}" ]; then
                # we have an existing version file, back it up first
                echo "  Backing up old version file for ${name}"
                mv "${ver}" "${verold}"
            fi
            mv "${vernew}" "${ver}"
        fi
    fi
done

